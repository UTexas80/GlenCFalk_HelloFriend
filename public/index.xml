<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Glen C. Falk</title>
    <link>/</link>
    <description>Recent content on Glen C. Falk</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
  </channel>
</rss>="self" type="application/rss+xml" />
    
    
    <item>
      <title>R Website</title>
      <link>/posts/2019/03/r-website/</link>
      <pubDate>Tue, 12 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>/posts/2019/03/r-website/</guid>
      <description>Move static content to static Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like
▾ &amp;lt;root&amp;gt;/ ▾ images/ logo.png  should become
▾ &amp;lt;root&amp;gt;/ ▾ static/ ▾ images/ logo.png  Additionally, you&amp;rsquo;ll want any files that should reside at the root (such as CNAME) to be moved to static.</description>
    </item>
    
    <item>
      <title>Shiny Admissions Dashboard</title>
      <link>/posts/2019/01/shiny-admissions-dashboard/</link>
      <pubDate>Thu, 10 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>/posts/2019/01/shiny-admissions-dashboard/</guid>
      <description>Move static content to static Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like
▾ &amp;lt;root&amp;gt;/ ▾ images/ logo.png  should become
▾ &amp;lt;root&amp;gt;/ ▾ static/ ▾ images/ logo.png  Additionally, you&amp;rsquo;ll want any files that should reside at the root (such as CNAME) to be moved to static.</description>
    </item>
    
    <item>
      <title>Fintech Quant Portfolio Analysis</title>
      <link>/posts/2018/09/fintech-quant-portfolio-analysis/</link>
      <pubDate>Fri, 28 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>/posts/2018/09/fintech-quant-portfolio-analysis/</guid>
      <description>Introduction This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&amp;rsquo;t cover using CSS to style your theme.
We&amp;rsquo;ll start with creating a new site with a very basic template.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>/about/</link>
      <pubDate>Sat, 09 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>/about/</guid>
      <description> customer-centric, results-driven problem-solver who clearly communicates technical materials and manages multiple data/analytic products while thriving in a dynamic environment
Expertise  R programming language
 tidyverse, R Markdown, Shiny
 CSS, HTML, JavaScript, JSON
 Business Intelligence
 Data Analytics, Mining &amp;amp; Reporting
  </description>
    </item>
    
    <item>
      <title>Education</title>
      <link>/education/</link>
      <pubDate>Sat, 09 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>/education/</guid>
      <description>The University of Georgia - Masters in Internet Technology - Athens, Georgia Concentration: Full Stack Development
Monmouth University - M.B.A. - West Long Branch, N.J. Concentration: Management Information Systems
The University of Texas - B.B.A. - Austin, Texas Concentration: Finance</description>
    </item>
    
    <item>
      <title>Experience</title>
      <link>/experience/</link>
      <pubDate>Sat, 09 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>/experience/</guid>
      <description>Solutions Engineer Consultant - CapVisor Associates LLC Responsibilities:
 Execute and troubleshoot existing R client reporting platform.
 Develop new PowerBI reporting capabilities/enhancements.
 Create troubleshooting and development documentation.
 Provide remote support and finance/portfolio expertise.
  Key Achievements:
 Developed processes to circumvent existing data validation issues.
 Function as a key contributor to CapVisor&amp;rsquo;s conversion to PowerBI.
  Research Analyst - The University of Georgia Responsibilities:</description>
    </item>
    
    <item>
      <title>Resume</title>
      <link>/resume/</link>
      <pubDate>Sat, 09 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>/resume/</guid>
      <description>Professional ExperienceData Engineer ConsultantCapVisor Associates LLC
Remote
2019 - 2018
Responsibilities:
- Execute and troubleshoot existing R client reporting platform.
- Develop new PowerBI reporting capabilities/enhancements.
- Create troubleshooting and development documentation.
- Provide remote support and finance/portfolio expertise.
Key Achievements:
- Devloped processes to circumvent existing data validation issues.
- Function as a key contributor to CapVisor’s conversion to PowerBI.
Research AnalystThe University of Georgia</description>
    </item>
    
    <item>
      <title>Getting Started with Hugo</title>
      <link>/posts/2018/04/getting-started-with-hugo/</link>
      <pubDate>Mon, 02 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>/posts/2018/04/getting-started-with-hugo/</guid>
      <description>Step 1. Install Hugo Go to Hugo releases and download the appropriate version for your OS and architecture.
Save it somewhere specific as we will be using it in the next step.
More complete instructions are available at Install Hugo
Step 2. Build the Docs Hugo has its own example site which happens to also be the documentation site you are reading right now.
Follow the following steps:
 Clone the Hugo repository Go into the repo Run hugo in server mode and build the docs Open your browser to http://localhost:1313  Corresponding pseudo commands:</description>
    </item>
    
    <item>
      <title>Hello R Markdown</title>
      <link>/post/2015-07-23-r-rmarkdown/</link>
      <pubDate>Thu, 23 Jul 2015 21:13:14 -0500</pubDate>
      
      <guid>/post/2015-07-23-r-rmarkdown/</guid>
      <description>R MarkdownThis is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com.
You can embed an R code chunk like this:
summary(cars)## speed dist ## Min. : 4.0 Min. : 2 ## 1st Qu.:12.0 1st Qu.: 26 ## Median :15.0 Median : 36 ## Mean :15.4 Mean : 43 ## 3rd Qu.</description>
    </item>
    
    <item>
      <title>(Hu)go Template Primer</title>
      <link>/posts/2014/04/hugo-template-primer/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>/posts/2014/04/hugo-template-primer/</guid>
      <description>Hugo uses the excellent Go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in Go templates.
This document is a brief primer on using Go templates.</description>
    </item>
    
  </channel>
</rss>